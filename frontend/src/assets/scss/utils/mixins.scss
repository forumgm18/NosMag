//@use "sass:math";
// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}
// size to one line
@mixin icon-size($height, $width: $height) {
  font-size:$height+px;
  min-width:($width/$height)+em;
  //min-width:(math.div($width, $height))+em;
  width:($width/$height)+em;
  //width:(math.div($width, $height))+em;
}
@mixin size($width,$height: $width) {
  width: $width;
  height: $height;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}
@mixin media-max-width2($breakpoint) {
  @media screen and (max-width: $breakpoint + 'px') {
    @content;
  }
}
@mixin media-min-width2($breakpoint) {
  @media screen and (min-width: $breakpoint + 'px') {
    @content;
  }
}

//==============================
@function em($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1em;
}
@mixin min-size($width, $height: $width) {
  min-width: $width;
  min-height: $height;
}
@mixin calc-width($col: "--col", $m: "--m") {
  width: calc((100% / var(#{$col})) - 2*var(#{$m}));
}
//Миксин для Шрифта
@mixin setFontBase ($fz, $fc, $fw : normal, $lh: normal, $ls: normal) {
  font-family: $mainFont;
  font-weight: $fw;
  //font-size: rem($fz);
  font-size: $fz;
  //line-height: rem($lh);
  line-height: $lh;
  color: $fc;
  letter-spacing: $ls;
}
